/*
 * This file is generated by jOOQ.
*/
package ru.hixon.gen.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.hixon.gen.tables.Blog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlogRecord extends UpdatableRecordImpl<BlogRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1887243234;

    /**
     * Setter for <code>public.blog.title</code>.
     */
    public BlogRecord setTitle(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.blog.title</code>.
     */
    public String getTitle() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.blog.body</code>.
     */
    public BlogRecord setBody(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.blog.body</code>.
     */
    public String getBody() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Blog.BLOG.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Blog.BLOG.BODY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getBody();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlogRecord value1(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlogRecord value2(String value) {
        setBody(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlogRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BlogRecord
     */
    public BlogRecord() {
        super(Blog.BLOG);
    }

    /**
     * Create a detached, initialised BlogRecord
     */
    public BlogRecord(String title, String body) {
        super(Blog.BLOG);

        set(0, title);
        set(1, body);
    }
}
